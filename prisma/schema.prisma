generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id                String  @id @default(cuid())
  created_time      DateTime @default(now())
  first_name        String?
  last_name         String?
  email             String   @unique
  email_verified    DateTime?
  phone_number      String? @unique
  password          String?
  gender            String?
  profile_image_url String?
  user_id           String?   @unique
  subscription      String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  sessions          session[]

  role              role      @default(USER)
}

enum role {
  SUPERADMIN
  ADMIN
  USER
  SURFER
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @db.LongText
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model payments {
  id               String  @id @default(cuid())
  created_time     DateTime @default(now())
  stripe_id        String
  email            String
  amount           String
  payment_time     String
  payment_date     String
  currency         String
  user_id          String
  customer_details String
  payment_intent   String
}

model subscriptions {
  id                        String  @id @default(cuid())
  created_time              DateTime @default(now())
  subscription_id           String
  stripe_user_id            String
  status                    String
  start_date                String
  end_date                  String?
  plan_id                   String
  default_payment_method_id String?
  email                     String
  user_id                   String
}

model subscriptions_plans {
  id           String  @id @default(cuid())
  created_time DateTime @default(now())
  plan_id      String
  name         String
  description  String
  amount       String
  currency     String
  interval     String
}

model invoices {
  id              String  @id @default(cuid())
  created_time    DateTime @default(now())
  invoice_id      String
  subscription_id String
  amount_paid     String
  amount_due      String?
  currency        String
  status          String
  email           String
  user_id         String?
}
